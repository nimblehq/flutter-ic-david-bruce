name: Deploy iOS staging build to TestFlight

# SECRETS needed:
### SSH_PRIVATE_KEY for Match Repo
### MATCH_PASS
### APPSTORE_CONNECT_API_KEY

on:
  push:
    branches:
      - develop
      - 'release/**'
      - chore/4-set-up-CI-CD-GHA-fastlane-firebase # TODO: Remove this later after test successfully

jobs:
  build_and_upload_to_testflight:
    name: Build and upload iOS app to TestFlight
    runs-on: macOS-12
    env:
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APPSTORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_CONNECT_API_KEY }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      REST_API_ENDPOINT: ${{ secrets.REST_API_ENDPOINT }}
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3.3.0

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set up Flutter version
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '3.7.8'

    - name: Setup .env.staging
      env:
        ENV_STAGING: ${{ secrets.ENV_STAGING }}
      run: echo $ENV_STAGING | base64 --decode >> .env.staging

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Run code generator script
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Install iOS dependencies 
      run: cd ios && bundle install && bundle exec pod install

    - name: Sync certificates and profiles for staging build
      run: cd ios && bundle exec fastlane sync_appstore_staging_signing

    - name: Deploy to TestFlight
      run: cd ios && bundle exec fastlane build_and_upload_testflight_app
